@{
        List<Tuple<string, string>> pages = Context
                .Documents[Blog.Pages]
                .Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
                .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
                .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
                .Where(x => !string.IsNullOrEmpty(x.Item1))
                .OrderBy(x => x.Item1)
                .ToList();

        var buttonClass = "nav openbtn";
        var useBlack = @Model.Bool("UseBlackNav");
        //buttonClass+= useBlack? " nav--black": " nav--white";

        
    }
<div class="sidenav">
  <a class="closebtn"><i class="fa fa-times"></i></a>
  <h2><a class="" href="@Context.GetLink("/")"><span>@Context.String(BlogKeys.Description)</span></a></h2>
  @foreach(Tuple<string, string> page in pages)
            {
                <a class="" href="@(page.Item2)"><span>@(page.Item1)</span></a>
            }
</div>
<a class="@buttonClass">
      <i class="fa fa-bars fa-2x"></i>
    </a>
    